#include <iostream>
#include "Matrix.h"
using namespace std;

/* Разработать перечисленные ниже классы. При разработке каждого класса возможны два варианта решения:
а) данные-члены класса представляют собой переменные и массивы фиксированной размерности;
б) память для данных-членов класса выделяется динамически.

Составить описания класса, обеспечивающего представление матрицы заданного размера n x m и любого минора в ней.
Память для матрицы выделять динамически. Написать несколько конструкторов, в том числе конструктор копирования.
Реализовать методы для отображения на экране как матрицы в целом, так и заданного минора,
а также для изменения минора; сложения, вычитания, умножения миноров.
Перегрузить операции сложения, вычитания, умножения и присваивания для данного класса.
Создать массив объектов данного класса и передать его в функцию, которая изменяет для i-й матрицы ее минор путем
умножения на константу.

*/

int main()
{
    setlocale(LC_ALL, "Russian");
    int n, num, strdel, stdel;
    cout << "Введите размерность = "; cin >> n;
    Matrix NewM1(n);
    cout << "Ввод матрицы" << endl;
    cin >> NewM1;
    cout << "Вывод матрицы" << endl;
    cout << NewM1;
    cout << "Создаём новую (вторую) матрицу" << endl;
    Matrix NewM2;
    cout << "Выводим вторую матрицу" << endl;
    cout << NewM2;
    cout << "Приравниваем к первой" << endl;
    NewM2=NewM1;
    cout << "Выводим приравненную вторую матрицу" << endl;
    cout << NewM2;
    cout << "Делаем минор первой матрицы" << endl;
    cout << "Укажите строчку, которую следует вычеркнуть - ";
    cin >> strdel;
    cout << "Укажите столбик, который следует вычеркнуть - ";
    cin >> stdel;
    Matrix m1=NewM1.Minor(strdel,stdel);
    cout << "Выводим минор 1 матрицы" << endl;
    cout << m1;
    cout << "Делаем второй минор" << endl;
    cout << "Укажите строчку, которую следует вычеркнуть - ";
    cin >> strdel;
    cout << "Укажите столбик, который следует вычеркнуть - ";
    cin >> stdel;
    Matrix m2=NewM2.Minor(strdel,stdel);
    cout << "Выводим второй минор" << endl;
    cout << m2;
    cout << "Складываем первый и второй минор" << endl;
    Matrix m3 = m2+m1;
    cout << m3;
    cout << "Вычитаем из первого второй минор" << endl;
    Matrix m4 = m2-m1;
    cout << m4;
    cout << "Умножаем первый минор на второй" << endl;
    Matrix m5 = m1*m2;
    cout << m5;
    cout << "Прибавляем к первому минору второй" << endl;
    m1+=m2;
    cout << m1;
    cout << "Создаём массив объектов класса, который будет состять из 2 миноров" << endl;
    Matrix mas[1];
    mas[0]=m1;
    mas[1]=m2;
    cout << "Умножаем оба на константу" << endl;
    cout << "Введите константу = "; cin >> num;
    for(int i=0; i<2; i++)
    {
        mas[i].umn(num);
    }
    cout << endl << "Выводим полученные миноры" << endl;
    for(int i=0; i<2; i++)
    {
        cout << "Минор " << i+1 << endl;
        cout << mas[i];
        cout << endl;
    }
    return 0;
}
